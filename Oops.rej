@@ -202,41 +192,42 @@
 
     async def set_zone_manual_temperature(self, zone_id, temperature) -> bool:
         payload = {}
-        payload['zones'] = self.thermo_zones_container_data['zones']
-        for id in range(len(payload['zones'])):
-            if payload['zones'][id]['zoneId'] == zone_id:
-                payload['zones'][id]['customTemperatureForManualMode'] = temperature
-                payload['zones'][id]['currentProfileLevel'] = 5
-                payload['zones'][id]['currentMode'] = 2
-
-        _LOGGER.info("PerryCoordinators set_manual_temperature "  + json.dumps(payload))
+        payload["zones"] = self.thermo_zones_container_data["zones"]
+        for id in range(len(payload["zones"])):
+            if payload["zones"][id]["zoneId"] == zone_id:
+                payload["zones"][id]["customTemperatureForManualMode"] = temperature
+                payload["zones"][id]["currentProfileLevel"] = 5
+                payload["zones"][id]["currentMode"] = 2
+
+        _LOGGER.info("PerryCoordinators set_manual_temperature " + json.dumps(payload))
         return await self.send_command(payload)
-    
 
     async def send_command(self, changes: Dict):
-        _LOGGER.info(f"Changes '{changes}' sent to thermostat {self._cdom_serial_number}")
+        _LOGGER.info(
+            f"Changes '{changes}' sent to thermostat {self._cdom_serial_number}"
+        )
 
         data = self.thermo_zones_container_data | changes
-        del data['CdomSerialNumber']
-        del data['CreationDate']
-        del data['easyModeCoolingActivationTime']
-        del data['easyModeCoolingSwitchOffTime']
-        del data['easyModeHeatingActivationTime']
-        del data['easyModeHeatingSwitchOffTime']
+        del data["CdomSerialNumber"]
+        del data["CreationDate"]
+        del data["easyModeCoolingActivationTime"]
+        del data["easyModeCoolingSwitchOffTime"]
+        del data["easyModeHeatingActivationTime"]
+        del data["easyModeHeatingSwitchOffTime"]
 
         payload = {
-            "ThermoZonesContainer": json.dumps(data) # The modified zones container
+            "ThermoZonesContainer": json.dumps(data)  # The modified zones container
         }
 
-        resp = await self.api.request(
-            "post", PERRY_CDOM_SET_WORKING_MODE, json=payload
-        )
+        resp = await self.api.request("post", PERRY_CDOM_SET_WORKING_MODE, json=payload)
         try:
             data = await resp.json()
             _LOGGER.info(f"Response from thermostat {self._cdom_serial_number}: {data}")
             resp.raise_for_status()
         except ClientResponseError as e:
-            _LOGGER.error(f"Error sending command '{changes}' to thermostat {self._cdom_serial_number}")
+            _LOGGER.error(
+                f"Error sending command '{changes}' to thermostat {self._cdom_serial_number}"
+            )
             raise e
 
     async def async_update(self):
